{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    username: \"admin\",\n?   id?: Int,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   password?: StringFilter | String,\n?   role?: BoolFilter | Boolean,\n?   session?: StringFilter | String\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?. \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    username: \"admin\",\n?   id?: Int,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   password?: StringFilter | String,\n?   role?: BoolFilter | Boolean,\n?   session?: StringFilter | String\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","target":"user.findUnique","timestamp":"2025-02-14T16:56:09.198Z"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    username: \"admin\",\n    password: \"admin\",\n?   id?: Int,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   role?: BoolFilter | Boolean,\n?   session?: StringFilter | String\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?. \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    username: \"admin\",\n    password: \"admin\",\n?   id?: Int,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   role?: BoolFilter | Boolean,\n?   session?: StringFilter | String\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","target":"user.findUnique","timestamp":"2025-02-14T17:00:01.845Z"}
